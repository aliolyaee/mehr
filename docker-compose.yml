version: "3.9"

############################
# 1) شبکه‌ها و رازها
############################
networks:
  web:                 # ارتباط سرویس‌های داخلی
    driver: bridge

secrets:
  db_password:
    file: ./secrets/db_password.txt
  app_key:
    file: ./secrets/app_key.txt

volumes:
  db_data:             # دیتای MySQL
  storage:             # استوریج لاراول (اختیاری اگر bind‑mount می‌کنید)

############################
# 2) سرویس‌ها
############################
services:

  ####################################
  # 2‑A) دیتابیس
  ####################################
  db:
    image: mysql:8.3
    restart: unless-stopped
    container_name: mysql_db
    environment:
      MYSQL_DATABASE: laravel_db
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD_FILE: /run/secrets/db_password
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_password
    volumes:
      - db_data:/var/lib/mysql
    networks: [web]
    secrets:
      - db_password
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root --password=$$(cat /run/secrets/db_password)"]
      interval: 10s
      timeout: 5s
      retries: 5

  ####################################
  # 2‑B) اپلیکیشن Laravel
  ####################################
  app:
    build:
      context: .
      dockerfile: docker/laravel/Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    env_file: backend/.env.prod           # روی سرور آماده کرده‌اید
    environment:
      APP_KEY_FILE: /run/secrets/app_key  # در bootstrap/app.php می‌توانید بخوانید
      DB_PASSWORD_FILE: /run/secrets/db_password
    volumes:
      - storage:/app/storage              # Volume نامدار
      - ./backend/.env.prod:/app/.env:ro  # نسخهٔ readonly
    depends_on:
      db:
        condition: service_healthy
    networks: [web]
    secrets:
      - db_password
      - app_key
    healthcheck:
      test: ["CMD", "php", "-r", "try{new PDO(getenv('DB_CONNECTION').':host='.getenv('DB_HOST').';dbname='.getenv('DB_DATABASE'),getenv('DB_USERNAME'),trim(file_get_contents('/run/secrets/db_password')));}catch(Exception $e){exit(1);}"]

  ####################################
  # 2‑C) Worker صف
  ####################################
  queue:
    image: laravel_app                   # همان ایمیج ساخته‌شده در بالا
    depends_on:
      - app
    command: php artisan queue:work --sleep=3 --tries=3
    restart: unless-stopped
    networks: [web]
    secrets:
      - db_password
      - app_key

  ####################################
  # 2‑D) فرانت React
  ####################################
  react:
    build:
      context: .
      dockerfile: docker/react/Dockerfile
    container_name: react_front
    restart: unless-stopped
    networks: [web]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost/"]


############################
# 3) پروفایل‌ها (اختیاری)
############################
# اگر می‌خواهید در محیط توسعه بعضی سرویس‌ها ساخته نشوند،
# می‌توانید از profile استفاده کنید (نسخه 3.9+ Compose)
#
#   docker compose --profile dev up
#
# services:
#   react:
#     profiles: ["dev"]
